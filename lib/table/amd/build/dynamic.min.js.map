{"version":3,"sources":["../src/dynamic.js"],"names":["watching","checkTableIsDynamic","tableRoot","Error","matches","Selectors","table","region","getFiltersetFromTable","JSON","parse","dataset","tableFilters","refreshTableContent","filterset","tableHandler","tableUniqueid","sortBy","tableSortBy","sortOrder","tableSortOrder","joinType","jointype","filters","then","data","placeholder","document","createElement","innerHTML","html","replaceWith","childNodes","updateTable","refreshContent","stringify","Promise","resolve","setFilters","setSortOrder","init","addEventListener","e","target","closest","sortableLink","links","sortableColumn","preventDefault","sortby","sortorder"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to handle dynamic table features.\n *\n * @module     core_table/dynamic\n * @package    core_table\n * @copyright  2020 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {fetch as fetchTableData} from 'core_table/local/dynamic/repository';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\n\nlet watching = false;\n\n/**\n * Ensure that a table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Bool}\n */\nconst checkTableIsDynamic = tableRoot => {\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    if (!tableRoot.matches(Selectors.table.region)) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return true;\n};\n\n/**\n * Get the filterset data from a known dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nconst getFiltersetFromTable = tableRoot => {\n    return JSON.parse(tableRoot.dataset.tableFilters);\n};\n\n/**\n * Update the specified table based on its current values.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Promise}\n */\nexport const refreshTableContent = tableRoot => {\n    const filterset = getFiltersetFromTable(tableRoot);\n\n    return fetchTableData(\n        tableRoot.dataset.tableHandler,\n        tableRoot.dataset.tableUniqueid,\n        {\n            sortBy: tableRoot.dataset.tableSortBy,\n            sortOrder: tableRoot.dataset.tableSortOrder,\n            joinType: filterset.jointype,\n            filters: filterset.filters,\n        }\n    )\n    .then(data => {\n        const placeholder = document.createElement('div');\n        placeholder.innerHTML = data.html;\n        tableRoot.replaceWith(...placeholder.childNodes);\n\n        return data;\n    });\n};\n\nexport const updateTable = (tableRoot, {\n    sortBy = null,\n    sortOrder = null,\n    filters = null,\n} = {}, refreshContent = true) => {\n    checkTableIsDynamic(tableRoot);\n\n    // Update sort fields.\n    if (sortBy && sortOrder) {\n        tableRoot.dataset.tableSortBy = sortBy;\n        tableRoot.dataset.tableSortOrder = sortOrder;\n    }\n\n    // Update filters.\n    if (filters) {\n        tableRoot.dataset.tableFilters = JSON.stringify(filters);\n    }\n\n    // Refresh.\n    if (refreshContent) {\n        return refreshTableContent(tableRoot);\n    } else {\n        return Promise.resolve();\n    }\n};\n\n/**\n * Update the specified table using the new filters.\n *\n * @param {HTMLElement} tableRoot\n * @param {Object} filters\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFilters = (tableRoot, filters, refreshContent = true) =>\n    updateTable(tableRoot, {filters}, refreshContent);\n\n/**\n * Update the sort order.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} sortBy\n * @param {Number} sortOrder\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setSortOrder = (tableRoot, sortBy, sortOrder, refreshContent = true) =>\n    updateTable(tableRoot, {sortBy, sortOrder}, refreshContent);\n\n/**\n * Set up listeners to handle table updates.\n */\nexport const init = () => {\n    if (watching) {\n        // Already watching.\n        return;\n    }\n    watching = true;\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(Selectors.table.region);\n\n        if (!tableRoot) {\n            return;\n        }\n\n        const sortableLink = e.target.closest(Selectors.table.links.sortableColumn);\n        if (sortableLink) {\n            e.preventDefault();\n\n            setSortOrder(tableRoot, sortableLink.dataset.sortby, sortableLink.dataset.sortorder);\n        }\n    });\n};\n"],"file":"dynamic.min.js"}